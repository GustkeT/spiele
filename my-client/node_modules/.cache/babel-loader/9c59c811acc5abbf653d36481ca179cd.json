{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\src\\\\components\\\\spiele\\\\toolbar.js\";\nimport React from 'react';\nimport { Image, ButtonToolbar, ButtonGroup, Button, FormGroup, FormControl } from 'react-bootstrap';\nimport neuesSpiel from '../../services/spiele.json';\nimport ClickEvent from './spielliste';\n\nvar ToolBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToolBar, _React$Component);\n\n  function ToolBar(props) {\n    var _this;\n\n    _classCallCheck(this, ToolBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToolBar).call(this, props));\n    _this.state = {\n      isToggleOn: true,\n      test: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    _this.handleNeuesSpielClick = _this.handleNeuesSpielClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ToolBar, [{\n    key: \"handleNeuesSpielClick\",\n    value: function handleNeuesSpielClick() {\n      this.setState(function (state) {\n        return {\n          isToggleOn: !state.isToggleOn\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"btn-toolbar justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleNeuesSpielClick,\n        type: \"button\",\n        className: \"btn btn-outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Neues Spiel\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.isToggleOn ? 'ON' : 'OFF', React.createElement(ClickEvent, {\n        test: this.state.isToggleOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"Suche\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ToolBar;\n}(React.Component);\n\nexport default ToolBar;","map":{"version":3,"sources":["D:\\Projekte\\spiele_v2\\my-client\\src\\components\\spiele\\toolbar.js"],"names":["React","Image","ButtonToolbar","ButtonGroup","Button","FormGroup","FormControl","neuesSpiel","ClickEvent","ToolBar","props","state","isToggleOn","test","handleNeuesSpielClick","bind","setState","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,MAA5C,EAAoDC,SAApD,EAA+DC,WAA/D,QAAkF,iBAAlF;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,IADD;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb,CAFkB,CAOlB;;AACA,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BC,IAA3B,uDAA7B;AARkB;AASnB;;;;4CAEwB;AACtB,WAAKC,QAAL,CAAc,UAAAL,KAAK;AAAA,eAAK;AACtBC,UAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADG,SAAL;AAAA,OAAnB;AAGD;;;6BAEQ;AACP,aACE;AAAK,QAAA,KAAK,EAAC,qCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKE,qBAAtB;AAA6C,QAAA,IAAI,EAAC,QAAlD;AAA2D,QAAA,SAAS,EAAC,2BAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADlC,EAEE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CANJ,CADF;AAkBD;;;;EArCmBZ,KAAK,CAACiB,S;;AAwC5B,eAAeR,OAAf","sourcesContent":["import React from 'react';\r\nimport { Image, ButtonToolbar, ButtonGroup, Button, FormGroup, FormControl } from 'react-bootstrap';\r\nimport neuesSpiel from '../../services/spiele.json';\r\nimport ClickEvent from './spielliste';\r\n\r\nclass ToolBar extends React.Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     isToggleOn: true,\r\n     test: true,\r\n   };\r\n\r\n   // This binding is necessary to make `this` work in the callback\r\n   this.handleNeuesSpielClick = this.handleNeuesSpielClick.bind(this);\r\n }\r\n\r\n  handleNeuesSpielClick() {\r\n    this.setState(state => ({\r\n      isToggleOn: !state.isToggleOn\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"btn-toolbar justify-content-between\">\r\n        <button onClick={this.handleNeuesSpielClick} type=\"button\" className=\"btn btn-outline-secondary\">Neues Spiel</button>\r\n        <div>\r\n          {this.state.isToggleOn ? 'ON' : 'OFF'}\r\n          <ClickEvent test={this.state.isToggleOn}/>\r\n        </div>\r\n          <form>\r\n            <FormGroup>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Suche\"\r\n              />\r\n            </FormGroup>\r\n          </form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolBar;\r\n"]},"metadata":{},"sourceType":"module"}