{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\src\\\\components\\\\spiele\\\\spiele.js\";\nimport React, { Component } from 'react';\nimport Spielliste from './spielliste';\nimport SpieleService from '../../services/SpieleService';\nimport { Grid, Row, Col } from 'react-bootstrap';\n\nvar Spiele =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Spiele, _Component);\n\n  function Spiele() {\n    var _this;\n\n    _classCallCheck(this, Spiele);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Spiele).call(this));\n    _this.state = {\n      //isLoading: true,\n      spiele: [] //error: null\n\n    };\n    return _this;\n  }\n\n  _createClass(Spiele, [{\n    key: \"fetchSpiele\",\n    value: function fetchSpiele() {\n      var _this2 = this;\n\n      fetch('/api/spiele').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          spiele: data,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetchSpiele(); //SpieleService.fetchSpiele(this.state);\n    } // async componentDidMount() {\n    //   try {\n    //     console.log('spiele: componentDidMount start' + this.state.spiele);\n    //     const response = await fetch('/api/spiele');\n    //     if (!response.ok) {\n    //       throw Error(response.statusText);\n    //     }\n    //     const json = await response.json();\n    //     this.setState({ spiele: json });\n    //     console.log('spiele: componentDidMount end' + this.state.spiele);\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          spiele = _this$state.spiele,\n          error = _this$state.error;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, error.message) : null, !isLoading ? React.createElement(\"div\", {\n        className: \"container-fluid\",\n        style: {\n          marginLeft: '-15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, console.log('spiele: render start' + this.state.spiele), React.createElement(Spielliste, {\n        spiele: this.state.spiele,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), console.log('spiele: render end' + this.state.spiele)))) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Loading...\"));\n    } // render() {\n    //   if (this.state.spiele === null) {\n    //     return (<div>\"loading ... \"</div>);\n    //   } else {\n    //     return (\n    //     <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\n    //         <div className=\"d-flex flex-row\">\n    //             <div className=\"col-sm-12\">\n    //                 {console.log('spiele: render start' + this.state.spiele)}\n    //                 <Spielliste spiele={this.state.spiele} />\n    //                 {console.log('spiele: render end' + this.state.spiele)}\n    //             </div>\n    //         </div>\n    //     </div>\n    //   )};\n    // }\n\n  }]);\n\n  return Spiele;\n}(Component);\n\nexport { Spiele as default };","map":{"version":3,"sources":["D:\\Projekte\\spiele_v2\\my-client\\src\\components\\spiele\\spiele.js"],"names":["React","Component","Spielliste","SpieleService","Grid","Row","Col","Spiele","state","spiele","fetch","then","response","json","data","setState","isLoading","catch","error","fetchSpiele","message","marginLeft","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B;;IAEqBC,M;;;;;AACnB,oBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,MAAM,EAAE,EAFC,CAGT;;AAHS,KAAb;AAFU;AAOb;;;;kCAEW;AAAA;;AACZC,MAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAC1BN,UAAAA,MAAM,EAAEK,IADkB;AAE1BE,UAAAA,SAAS,EAAE;AAFe,SAAd,CAAJ;AAAA,OAFZ,EAOCC,KAPD,CAOO,UAAAC,KAAK;AAAA,eAAI,MAAI,CAACH,QAAL,CAAc;AAACG,UAAAA,KAAK,EAALA,KAAD;AAAQF,UAAAA,SAAS,EAAE;AAAnB,SAAd,CAAJ;AAAA,OAPZ;AAQD;;;wCAEmB;AAClBG,MAAAA,WAAW,GADO,CAElB;AACD,K,CAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAEO;AAAA,wBAC8B,KAAKX,KADnC;AAAA,UACCQ,SADD,eACCA,SADD;AAAA,UACYP,MADZ,eACYA,MADZ;AAAA,UACoBS,KADpB,eACoBA,KADpB;AAGP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGA,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAACE,OAAV,CAAH,GAA4B,IAFpC,EAIG,CAACJ,SAAD,GACC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,KAAK,EAAE;AAACK,UAAAA,UAAU,EAAE;AAAb,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,OAAO,CAACC,GAAR,CAAY,yBAAyB,KAAKf,KAAL,CAAWC,MAAhD,CADL,EAEI,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGKa,OAAO,CAACC,GAAR,CAAY,uBAAuB,KAAKf,KAAL,CAAWC,MAA9C,CAHL,CADJ,CADJ,CADD,GAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfJ,CADF;AAoBD,K,CAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EAjFkCR,S;;SAAfM,M","sourcesContent":["import React, { Component } from 'react';\r\nimport Spielliste from './spielliste';\r\nimport SpieleService from '../../services/SpieleService';\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\n\r\nexport default class Spiele extends Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n          //isLoading: true,\r\n          spiele: [],\r\n          //error: null\r\n      };\r\n  }\r\n\r\nfetchSpiele() {\r\n  fetch('/api/spiele')\r\n    .then(response => response.json())\r\n    .then(data => this.setState({\r\n      spiele: data,\r\n      isLoading: false,\r\n    }))\r\n\r\n  .catch(error => this.setState({error, isLoading: false}));\r\n}\r\n\r\ncomponentDidMount() {\r\n  fetchSpiele();\r\n  //SpieleService.fetchSpiele(this.state);\r\n}\r\n\r\n  // async componentDidMount() {\r\n  //   try {\r\n  //     console.log('spiele: componentDidMount start' + this.state.spiele);\r\n  //     const response = await fetch('/api/spiele');\r\n  //     if (!response.ok) {\r\n  //       throw Error(response.statusText);\r\n  //     }\r\n  //     const json = await response.json();\r\n  //     this.setState({ spiele: json });\r\n  //     console.log('spiele: componentDidMount end' + this.state.spiele);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // }\r\n\r\nrender() {\r\n  const { isLoading, spiele, error } = this.state;\r\n\r\n  return(\r\n    <React.Fragment>\r\n\r\n      {error ? <p>{error.message}</p> : null}\r\n\r\n      {!isLoading ? (\r\n        <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\r\n            <div className=\"d-flex flex-row\">\r\n                <div className=\"col-sm-12\">\r\n                    {console.log('spiele: render start' + this.state.spiele)}\r\n                    <Spielliste spiele={this.state.spiele} />\r\n                    {console.log('spiele: render end' + this.state.spiele)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n      ) : (\r\n        <h3>Loading...</h3>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n  // render() {\r\n  //   if (this.state.spiele === null) {\r\n  //     return (<div>\"loading ... \"</div>);\r\n  //   } else {\r\n  //     return (\r\n  //     <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\r\n  //         <div className=\"d-flex flex-row\">\r\n  //             <div className=\"col-sm-12\">\r\n  //                 {console.log('spiele: render start' + this.state.spiele)}\r\n  //                 <Spielliste spiele={this.state.spiele} />\r\n  //                 {console.log('spiele: render end' + this.state.spiele)}\r\n  //             </div>\r\n  //         </div>\r\n  //     </div>\r\n  //   )};\r\n  // }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}