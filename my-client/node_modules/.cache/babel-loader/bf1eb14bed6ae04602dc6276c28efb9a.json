{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Projekte\\\\spiele_v2\\\\my-client\\\\src\\\\components\\\\spiele\\\\spiele.js\";\nimport React, { Component } from 'react';\nimport Spielliste from './spielliste';\nimport SpieleService from '../../services/SpieleService';\nimport Toolbar from './toolbar';\nimport { Grid, Row, Col } from 'react-bootstrap';\nimport { fetchSpiele } from '../../services/SpieleService.js';\nimport neuesSpiel from '../../services/spiele.json';\n\nvar Spiele =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Spiele, _Component);\n\n  //First solution\n  // constructor() {\n  //     super();\n  //     this.state = {\n  //         spiele: [],\n  //     };\n  // }\n  //\n  // async componentDidMount() {\n  //   try {\n  //     console.log('spiele: componentDidMount start' + this.state.spiele);\n  //     const response = await fetch('/api/spiele');\n  //     if (!response.ok) {\n  //       throw Error(response.statusText);\n  //     }\n  //     const json = await response.json();\n  //     this.setState({ spiele: json });\n  //     console.log('spiele: componentDidMount end' + this.state.spiele);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  //\n  // render() {\n  //   if (this.state.spiele === null) {\n  //     return (<div>\"loading ... \"</div>);\n  //   } else {\n  //     return (\n  //     <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\n  //         <div className=\"d-flex flex-row\">\n  //             <div className=\"col-sm-12\">\n  //                 {console.log('spiele: render start' + this.state.spiele)}\n  //                 <Spielliste spiele={this.state.spiele} />\n  //                 {console.log('spiele: render end' + this.state.spiele)}\n  //             </div>\n  //         </div>\n  //     </div>\n  //   )};\n  // }\n  //Second solution\n  function Spiele() {\n    var _this;\n\n    _classCallCheck(this, Spiele);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Spiele).call(this));\n    _this.state = {\n      isLoading: true,\n      spiele: [],\n      error: null\n    }; // This binding is necessary to make `this` work in the callback\n\n    _this.handleNeuesSpielClick = _this.handleNeuesSpielClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // fetchSpiele() {\n  //   fetch('/api/spiele')\n  //     .then(response => response.json())\n  //     .then(data => this.setState({\n  //       spiele: data,\n  //       isLoading: false,\n  //     }))\n  //\n  //   .catch(error => this.setState({error, isLoading: false}));\n  // }\n\n\n  _createClass(Spiele, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //fetchSpiele in gleicher Klasse\n      // this.fetchSpiele();\n      //fetchSpiele in SpieleService\n      fetchSpiele().then(function (data) {\n        _this2.setState({\n          spiele: data,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"handleNeuesSpielClick\",\n    value: function handleNeuesSpielClick() {\n      SpielKarteNeu;\n      this.state.spiele.unshift(neuesSpiel);\n      this.setState(function (state) {\n        return {};\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          spiele = _this$state.spiele,\n          error = _this$state.error;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, error.message) : null, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleNeuesSpielClick,\n        type: \"button\",\n        className: \"btn btn-outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Neues Spiel\")), !isLoading ? React.createElement(\"div\", {\n        className: \"container-fluid\",\n        style: {\n          marginLeft: '-15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, console.log('spiele: render start' + this.state.spiele), React.createElement(Spielliste, {\n        spiele: this.state.spiele,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), console.log('spiele: render end' + this.state.spiele)))) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n  }]);\n\n  return Spiele;\n}(Component);\n\nexport { Spiele as default };","map":{"version":3,"sources":["D:\\Projekte\\spiele_v2\\my-client\\src\\components\\spiele\\spiele.js"],"names":["React","Component","Spielliste","SpieleService","Toolbar","Grid","Row","Col","fetchSpiele","neuesSpiel","Spiele","state","isLoading","spiele","error","handleNeuesSpielClick","bind","then","data","setState","catch","SpielKarteNeu","unshift","message","marginLeft","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Spielliste from './spielliste';\r\nimport SpieleService from '../../services/SpieleService';\r\nimport Toolbar from './toolbar';\r\n\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\n\r\nimport {fetchSpiele} from '../../services/SpieleService.js';\r\nimport neuesSpiel from '../../services/spiele.json';\r\n\r\nexport default class Spiele extends Component {\r\n\r\n  //First solution\r\n  // constructor() {\r\n  //     super();\r\n  //     this.state = {\r\n  //         spiele: [],\r\n  //     };\r\n  // }\r\n  //\r\n  // async componentDidMount() {\r\n  //   try {\r\n  //     console.log('spiele: componentDidMount start' + this.state.spiele);\r\n  //     const response = await fetch('/api/spiele');\r\n  //     if (!response.ok) {\r\n  //       throw Error(response.statusText);\r\n  //     }\r\n  //     const json = await response.json();\r\n  //     this.setState({ spiele: json });\r\n  //     console.log('spiele: componentDidMount end' + this.state.spiele);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // }\r\n  //\r\n  // render() {\r\n  //   if (this.state.spiele === null) {\r\n  //     return (<div>\"loading ... \"</div>);\r\n  //   } else {\r\n  //     return (\r\n  //     <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\r\n  //         <div className=\"d-flex flex-row\">\r\n  //             <div className=\"col-sm-12\">\r\n  //                 {console.log('spiele: render start' + this.state.spiele)}\r\n  //                 <Spielliste spiele={this.state.spiele} />\r\n  //                 {console.log('spiele: render end' + this.state.spiele)}\r\n  //             </div>\r\n  //         </div>\r\n  //     </div>\r\n  //   )};\r\n  // }\r\n\r\n  //Second solution\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n          isLoading: true,\r\n          spiele: [],\r\n          error: null,\r\n      };\r\n\r\n      // This binding is necessary to make `this` work in the callback\r\n      this.handleNeuesSpielClick = this.handleNeuesSpielClick.bind(this);\r\n  }\r\n\r\n  // fetchSpiele() {\r\n  //   fetch('/api/spiele')\r\n  //     .then(response => response.json())\r\n  //     .then(data => this.setState({\r\n  //       spiele: data,\r\n  //       isLoading: false,\r\n  //     }))\r\n  //\r\n  //   .catch(error => this.setState({error, isLoading: false}));\r\n  // }\r\n\r\n  componentDidMount() {\r\n    //fetchSpiele in gleicher Klasse\r\n    // this.fetchSpiele();\r\n\r\n    //fetchSpiele in SpieleService\r\n    fetchSpiele()\r\n      .then( data => {this.setState({\r\n          spiele: data,\r\n          isLoading : false,\r\n        });\r\n      })\r\n\r\n      .catch(error => this.setState({error, isLoading: false}));\r\n  }\r\n\r\n  handleNeuesSpielClick() {\r\n    SpielKarteNeu;\r\n    this.state.spiele.unshift(neuesSpiel);\r\n    this.setState(state => ({\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, spiele, error } = this.state;\r\n\r\n    return(\r\n      <React.Fragment>\r\n        {error ? <p>{error.message}</p> : null}\r\n        <Toolbar/>\r\n        <div>\r\n          <button onClick={this.handleNeuesSpielClick} type=\"button\" className=\"btn btn-outline-secondary\">Neues Spiel</button>\r\n        </div>\r\n        {!isLoading ? (\r\n          <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\r\n              <div className=\"d-flex flex-row\">\r\n                  <div className=\"col-sm-12\">\r\n                      {console.log('spiele: render start' + this.state.spiele)}\r\n                      <Spielliste spiele={this.state.spiele} />\r\n                      {console.log('spiele: render end' + this.state.spiele)}\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        ) : (\r\n          <h3>Loading...</h3>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}