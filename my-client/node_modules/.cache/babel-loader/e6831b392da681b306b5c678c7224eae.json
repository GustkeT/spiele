{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projekte\\\\spiele_v1\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projekte\\\\spiele_v1\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projekte\\\\spiele_v1\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projekte\\\\spiele_v1\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projekte\\\\spiele_v1\\\\my-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projekte\\\\spiele_v1\\\\my-client\\\\src\\\\components\\\\spiele\\\\spiele.js\";\nimport React, { Component } from 'react';\nimport Spielliste from './spielliste';\nimport SpieleService from '../../services/SpieleService';\n\nvar Spiele =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Spiele, _Component);\n\n  function Spiele() {\n    var _this;\n\n    _classCallCheck(this, Spiele);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Spiele).call(this));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      spiele: []\n    };\n    return _this;\n  }\n\n  _createClass(Spiele, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"/api/spiele\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          spiele: result.items\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      }); // console.log('spiele: componentDidMount start' + this.state.spiele);\n      // this.setState(() => ({ spiele: SpieleService.getSpiele() }));\n      // console.log('spiele: componentDidMount end' + this.state.spiele);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          spiele = _this$state.spiele;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, this.spiele.map(function (spiel) {\n          return React.createElement(\"li\", {\n            key: spiel.titel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, spiel.autor, \" \", spiel.dauer);\n        })) // <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\n        //     <div className=\"d-flex flex-row\">\n        //         <div className=\"col-sm-12\">\n        //             {console.log('spiele: render start' + this.state.spiele)}\n        //             <Spielliste spiele={this.state.spiele} />\n        //             {console.log('spiele: render end' + this.state.spiele)}\n        //         </div>\n        //     </div>\n        // </div>\n        ;\n      }\n    }\n  }]);\n\n  return Spiele;\n}(Component);\n\nexport { Spiele as default };","map":{"version":3,"sources":["D:\\Projekte\\spiele_v1\\my-client\\src\\components\\spiele\\spiele.js"],"names":["React","Component","Spielliste","SpieleService","Spiele","state","error","isLoaded","spiele","fetch","then","res","json","result","setState","items","message","map","spiel","titel","autor","dauer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;IAEqBC,M;;;;;AACjB,oBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAFU;AAOb;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAGI,UAACG,MAAD,EAAY;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,MAAM,EAAEK,MAAM,CAACE;AAFH,SAAd;AAID,OARL,EASI;AACA;AACA;AACA,gBAACT,KAAD,EAAW;AACT,QAAA,MAAI,CAACQ,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OAjBL,EADkB,CAqBhB;AACA;AACA;AACH;;;6BAEQ;AAAA,wBAC6B,KAAKD,KADlC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,MADlB,eACkBA,MADlB;;AAGP,UAAIF,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACU,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACH,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKC,MAAL,CAAYS,GAAZ,CAAgB,UAAAC,KAAK;AAAA,iBACpB;AAAI,YAAA,GAAG,EAAEA,KAAK,CAACC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,KAAK,CAACE,KADT,OACiBF,KAAK,CAACG,KADvB,CADoB;AAAA,SAArB,CADH,CADF,CAQE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBF;AAkBH;AACF;;;;EA/D+BpB,S;;SAAfG,M","sourcesContent":["import React, { Component } from 'react';\r\nimport Spielliste from './spielliste';\r\nimport SpieleService from '../../services/SpieleService';\r\n\r\nexport default class Spiele extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            spiele: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      fetch(\"/api/spiele\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              spiele: result.items\r\n            });\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n\r\n        // console.log('spiele: componentDidMount start' + this.state.spiele);\r\n        // this.setState(() => ({ spiele: SpieleService.getSpiele() }));\r\n        // console.log('spiele: componentDidMount end' + this.state.spiele);\r\n    }\r\n\r\n    render() {\r\n      const { error, isLoaded, spiele } = this.state;\r\n\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n          return (\r\n            <ul>\r\n              {this.spiele.map(spiel => (\r\n                <li key={spiel.titel}>\r\n                  {spiel.autor} {spiel.dauer}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            // <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\r\n            //     <div className=\"d-flex flex-row\">\r\n            //         <div className=\"col-sm-12\">\r\n            //             {console.log('spiele: render start' + this.state.spiele)}\r\n            //             <Spielliste spiele={this.state.spiele} />\r\n            //             {console.log('spiele: render end' + this.state.spiele)}\r\n            //         </div>\r\n            //     </div>\r\n            // </div>\r\n        );\r\n      }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}